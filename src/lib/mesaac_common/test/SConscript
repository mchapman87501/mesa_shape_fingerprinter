# -*- python -*-
Import("*")

import glob

env = env.Clone()
env.Prepend(
    CPPPATH=Split(".. ../gen_license"), 
    LIBPATH=Split(".."), 
    LIBS=mesaac_common
)
env.Append(
    LIBS=Split("cppunit z"),
    CXXFLAGS=Split("-g"),
    LINKFLAGS=Split("-g")
)

licenseInfoFileCmd = env.Program("license_info_file_cmd", ["license_info_file_cmd.cpp"])
Alias("binaries", licenseInfoFileCmd)

PERPETUAL = env['build_info']['MESAAC_PERPETUAL_LICENSE']
pt1 = env.AddPythonTest("test_license_info_file_2.py",
                        EXE=licenseInfoFileCmd[0].abspath, 
                        PERPETUAL=PERPETUAL)
Depends(pt1, [licenseInfoFileCmd, genLicenseCmd])

lifcStripped = env.Command("license_info_file_cmd_stripped", licenseInfoFileCmd,
"cp ${SOURCE.abspath} ${TARGET.abspath} && strip ${TARGET.abspath}")
pt2 = env.AddPythonTest("test_license_info_file_stripped.py",
                        EXE=lifcStripped[0].abspath,
                        PERPETUAL=PERPETUAL)
Depends(pt2, [lifcStripped, genLicenseCmd, pt1])

liSupport = Split("../gen_license/license_info_gen.o")
for testSrc in Glob("test_*.cpp"):
    supportSrcs=[]
    name = str(testSrc)
    if name.startswith("test_license_info"):
        supportSrcs=[liSupport]
    env.AddUnitTestProg(name[:-4], supportSrcs=supportSrcs)

b64_stdin = env.Program("b64_stdin", ["b64_stdin.cpp"])
exe = b64_stdin[0].abspath
pt3 = env.AddPythonTest("test_b64_codec.py", EXE=exe)
Depends(pt3, [b64_stdin])

Default("binaries")
