Import("*")
import glob
import logging
import os

apLib = mesaacLibs['alglib_net.apLib']
svdLib = mesaacLibs['alglib_net.svdLib']

canBuild = env["HAVE_BOOST"]

if not canBuild:
    logging.warn("Cannot build in %s -- Boost is needed" % os.getcwd())
else:
    env = env.Clone(
    )
    env.Append(
      CPPFLAGS=Split("-DHAVE_BOOST=1"),
      CPPPATH=Split("#src/lib/svd #src/lib/svd/libs") + [env["BOOST_CPPPATH"]],
      LIBPATH=[env["BOOST_LIBPATH"]],
      # CXXFLAGS=Split("-Winline"),
      LIBS=[
          mesaacLibs["mesaac_shape"], mesaacLibs["mesaac_mol"],
          apLib, svdLib,
      ],
    )
    # Two names for the same executable -- one for backward compatibility.
    srcs = Split("""shape_fingerprinter.cpp sdf_shape_fingerprinter.cpp
                    mol_fingerprinter.cpp""")
    for progname in ["ShapeFingerprinter", "shape_fingerprinter"]:
        # Last one wins for unit testing.
        shape_fingerprinter_exe = env.Installable(progname, srcs)
    SConscript(dirs="test", exports="env shape_fingerprinter_exe")
